@charset "UTF-8";
@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,600,700&subset=cyrillic");
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

.container {
  margin: 0 auto; }

.row {
  display: flex;
  flex-wrap: wrap; }

.row--nowrap {
  flex-wrap: nowrap; }

.row--justify {
  justify-content: space-between; }

.row--valign {
  align-items: center; }

.half {
  width: 50%; }

.third {
  width: 33.3%; }

.quarter {
  width: 25%; }

:root {
  font-size: 16px;
  --primary: #62A044;
  --primary-dark: #40851E; }

* {
  box-sizing: border-box; }

body {
  background-color: #fff;
  height: 100%;
  overflow-x: hidden;
  font: 1.125rem "Century Gothic", Helvetica, Arial sans-serif;
  color: #676767;
  line-height: 1.7; }

a {
  color: inherit; }

p, h1, h2, h3 {
  margin: 0; }

h1, h2, h3 {
  line-height: 1.2; }

ol, ul {
  padding: 0;
  margin: 0; }

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0; }

.container {
  width: 77.5rem; }

.checkbox-wrapper input[type="checkbox"] {
  display: none; }
  .checkbox-wrapper input[type="checkbox"] + label span {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer; }
  .checkbox-wrapper input[type="checkbox"] + label {
    width: 50%;
    position: relative; }
  .checkbox-wrapper input[type="checkbox"] + label span {
    position: absolute;
    width: 2.1875rem;
    height: 2.1875rem;
    margin: 0;
    border: 2px solid #666;
    background-color: #fff;
    border-radius: 2px;
    right: -2.1875rem;
    top: -2px; }
  .checkbox-wrapper input[type="checkbox"]:checked + label span:before {
    content: '';
    display: block;
    position: absolute;
    width: 1.5625rem;
    height: 1.5625rem;
    background: url(../images/check.svg) no-repeat;
    background-size: contain;
    bottom: 3px;
    left: 0.4375rem; }

.header {
  height: 5.625rem; }
  .header .container {
    height: 100%;
    display: flex;
    align-items: center; }

.header__logo {
  margin-right: 4.4375rem; }

.main-nav ul {
  list-style-type: none;
  display: flex; }

.main-nav li {
  margin-right: 2.5rem; }

.main-nav a {
  text-decoration: none; }
  .main-nav a:hover {
    border-bottom: 2px solid var(--primary); }

.main-screen {
  height: 43.125rem;
  background: url(../images/berlin.jpg) no-repeat center/cover; }
  .main-screen .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-right: 38.75rem; }

.main-screen__h1 {
  color: #000;
  font-size: 3.125rem;
  margin-bottom: 0.9375rem; }

.main-screen__subheading {
  font-size: 1.875rem;
  color: var(--primary);
  margin-bottom: 1.25rem; }

.main-screen__flags, .main-screen__short {
  margin-bottom: 1.875rem; }

.main-screen__btns {
  display: flex; }

.btn {
  display: block;
  font-weight: 700;
  font-size: 1.125rem;
  color: #fff;
  background-color: var(--primary);
  text-decoration: none;
  text-transform: uppercase;
  margin-right: 1.25rem;
  padding: 1.25rem 2.375rem; }
  .btn:only-child {
    margin-right: 0; }
  .btn:hover {
    background-color: var(--primary-dark); }

h2 {
  color: #000;
  font-size: 3.125rem;
  margin-bottom: 4.375rem; }

.features {
  padding: 6.25rem 5.1875rem 5.75rem;
  text-align: center; }
  .features .btn {
    display: inline-block;
    margin: 4.375rem auto 1.875rem; }

.feature__icon {
  margin-bottom: 2.5rem; }

.feature {
  font-size: 1rem;
  padding: 0 1.25rem; }
  .feature h3 {
    color: #000;
    font-size: 1.4375rem;
    font-weight: 400;
    margin-bottom: 1.25rem; }

.information__main-txt {
  padding: 5.4375rem 12.5rem 5.4375rem 6.0625rem;
  background-color: #ededed;
  width: 79.67742%; }
  .information__main-txt h2 {
    margin-bottom: 2.5rem; }
  .information__main-txt .subheading {
    color: var(--primary);
    font-size: 1.5625rem;
    margin-bottom: 1.3125rem; }

.information__main {
  position: relative;
  margin-bottom: 9.8125rem; }

.information__defs {
  position: absolute;
  right: 0;
  bottom: -3.5625rem;
  padding: 4.4375rem 3.75rem 2rem 3.125rem;
  background-color: var(--primary);
  color: #fff;
  max-width: 24.375rem; }
  .information__defs dl {
    font-size: 1.4375rem;
    display: flex;
    flex-wrap: wrap; }
  .information__defs dt {
    padding-right: 2.625rem; }
  .information__defs dd {
    margin-left: 0;
    font-weight: 700; }
  .information__defs dt, .information__defs dd {
    flex: 0 0 50%;
    margin-bottom: 1.125rem; }

.information__faq {
  width: 74.67742%;
  margin: 0 auto; }

.faq-inner {
  height: 0;
  overflow: hidden;
  padding-right: 2.5rem; }

.faq label {
  font-size: 1.5625rem;
  color: #000;
  padding: 0.875rem 0;
  border-bottom: 1px solid #676767;
  display: block; }

.faq input[type="checkbox"] {
  display: none; }

.faq input[type="checkbox"]:checked ~ .faq-inner {
  height: auto; }

.faq input[type="checkbox"]:checked ~ label {
  color: var(--primary);
  font-weight: 400;
  border-bottom: none; }

.faq h3 {
  color: #000;
  font-weight: 400;
  margin: 1.5625rem 0; }

.faq ul {
  list-style: none; }
  .faq ul li:before {
    content: '—';
    margin-right: 1.6875rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
